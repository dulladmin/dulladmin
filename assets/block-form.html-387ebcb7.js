import{_ as l,M as o,p as r,q as p,R as n,t as s,N as t,V as e,a1 as i}from"./framework-5866ffd3.js";const d={},c=i(`<h1 id="form-block" tabindex="-1"><a class="header-anchor" href="#form-block" aria-hidden="true">#</a> Form Block</h1><h2 id="definition-file" tabindex="-1"><a class="header-anchor" href="#definition-file" aria-hidden="true">#</a> Definition File</h2><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token key atrule">name</span><span class="token punctuation">:</span> <span class="token string">&#39;users&#39;</span>
<span class="token key atrule">views</span><span class="token punctuation">:</span>
  <span class="token key atrule">new</span><span class="token punctuation">:</span>
    <span class="token comment"># &lt;FormBlock @name=&quot;self&quot;&gt;</span>
    <span class="token key atrule">form</span><span class="token punctuation">:</span>
      <span class="token key atrule">items</span><span class="token punctuation">:</span>
        <span class="token punctuation">-</span> <span class="token punctuation">{</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> <span class="token string">&#39;name&#39;</span><span class="token punctuation">,</span> <span class="token key atrule">type</span><span class="token punctuation">:</span> <span class="token string">&#39;string&#39;</span> <span class="token punctuation">}</span>
        <span class="token punctuation">-</span> <span class="token punctuation">{</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> <span class="token string">&#39;avatar&#39;</span><span class="token punctuation">,</span> <span class="token key atrule">type</span><span class="token punctuation">:</span> <span class="token string">&#39;image&#39;</span> <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="fields" tabindex="-1"><a class="header-anchor" href="#fields" aria-hidden="true">#</a> Fields</h2><h3 id="items" tabindex="-1"><a class="header-anchor" href="#items" aria-hidden="true">#</a> items</h3><table><thead><tr><th>Field</th><th>Description</th><th>Type</th><th>Default value</th><th>Sample value</th></tr></thead><tbody><tr><td>name</td><td>model attribute name</td><td>string</td><td>-</td><td>&quot;id&quot;</td></tr><tr><td>type</td><td>model attribute value type</td><td>string</td><td>-</td><td>&quot;string&quot;</td></tr><tr><td>optionals</td><td>model attribute value&#39;s enum</td><td>Array&lt;string | number | boolean&gt;</td><td>-</td><td>[&quot;apple&quot;, &quot;google&quot;, &quot;microsoft&quot;]</td></tr><tr><td>attributes</td><td>embed object attributes, available when <code>type == &quot;object&quot;</code></td><td>-</td><td>-</td><td>-</td></tr><tr><td>attributes.name</td><td>object attribute name</td><td>string</td><td>-</td><td>-</td></tr><tr><td>attributes.type</td><td>object attribute value type</td><td>string</td><td>-</td><td>-</td></tr><tr><td>attributes.optionals</td><td>object attribute value&#39;s enum</td><td>Array&lt;string | number | boolean&gt;</td><td>-</td><td>-</td></tr></tbody></table>`,6),u=n("strong",null,"type",-1),m=n("strong",null,"attributes.type",-1),k=n("code",null,"object",-1),v=i(`<h2 id="request-interface" tabindex="-1"><a class="header-anchor" href="#request-interface" aria-hidden="true">#</a> Request Interface</h2><h3 id="get" tabindex="-1"><a class="header-anchor" href="#get" aria-hidden="true">#</a> GET</h3><ul><li><strong>GET /users/new/self</strong></li><li><strong>request</strong></li></ul><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">interface</span> <span class="token class-name">GetRequest</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li><strong>response data</strong></li></ul><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">interface</span> <span class="token class-name">GetResponse</span> <span class="token punctuation">{</span>
  form<span class="token operator">:</span> <span class="token punctuation">{</span>
    name<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span>
    avatar<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="put" tabindex="-1"><a class="header-anchor" href="#put" aria-hidden="true">#</a> PUT</h3><ul><li><strong>PUT /users/new/self</strong></li><li><strong>request</strong></li></ul><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">interface</span> <span class="token class-name">PutRequest</span> <span class="token punctuation">{</span>
  form<span class="token operator">:</span> <span class="token punctuation">{</span>
    name<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span>
    avatar<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><strong>response data</strong></li></ul><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">interface</span> <span class="token class-name">PutResponse</span> <span class="token punctuation">{</span>
  form<span class="token operator">:</span> <span class="token punctuation">{</span>
    name<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span>
    avatar<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,11);function b(h,g){const a=o("RouterLink");return r(),p("div",null,[c,n("ul",null,[n("li",null,[u,s(" - must be one of "),t(a,{to:"/guide/specification/type.html"},{default:e(()=>[s("Value Type")]),_:1})]),n("li",null,[m,s(" - must be one of "),t(a,{to:"/guide/specification/type.html"},{default:e(()=>[s("Value Type")]),_:1}),s(", except "),k])]),v])}const y=l(d,[["render",b],["__file","block-form.html.vue"]]);export{y as default};
