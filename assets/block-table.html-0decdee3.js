import{_ as o,M as i,p as l,q as d,R as n,t,N as a,V as e,a1 as p}from"./framework-5866ffd3.js";const r={},c=p(`<h1 id="table-block" tabindex="-1"><a class="header-anchor" href="#table-block" aria-hidden="true">#</a> Table Block</h1><h2 id="definition-file" tabindex="-1"><a class="header-anchor" href="#definition-file" aria-hidden="true">#</a> Definition File</h2><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token key atrule">name</span><span class="token punctuation">:</span> <span class="token string">&#39;users&#39;</span>
<span class="token key atrule">views</span><span class="token punctuation">:</span>
  <span class="token key atrule">index</span><span class="token punctuation">:</span>
    <span class="token comment"># &lt;TableBlock @name=&quot;self&quot;&gt;</span>
    <span class="token key atrule">table</span><span class="token punctuation">:</span>
      <span class="token key atrule">items</span><span class="token punctuation">:</span>
        <span class="token punctuation">-</span> <span class="token punctuation">{</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> <span class="token string">&#39;id&#39;</span><span class="token punctuation">,</span> <span class="token key atrule">type</span><span class="token punctuation">:</span> <span class="token string">&#39;int64&#39;</span> <span class="token punctuation">}</span>
        <span class="token punctuation">-</span> <span class="token punctuation">{</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> <span class="token string">&#39;name&#39;</span><span class="token punctuation">,</span> <span class="token key atrule">type</span><span class="token punctuation">:</span> <span class="token string">&#39;string&#39;</span> <span class="token punctuation">}</span>
        <span class="token punctuation">-</span> <span class="token punctuation">{</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> <span class="token string">&#39;avatar&#39;</span><span class="token punctuation">,</span> <span class="token key atrule">type</span><span class="token punctuation">:</span> <span class="token string">&#39;image&#39;</span> <span class="token punctuation">}</span>
      <span class="token key atrule">sorters</span><span class="token punctuation">:</span>
        <span class="token punctuation">-</span> <span class="token punctuation">{</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> <span class="token string">&#39;id&#39;</span><span class="token punctuation">,</span> <span class="token key atrule">directions</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">&#39;descend&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;ascend&#39;</span><span class="token punctuation">]</span> <span class="token punctuation">}</span>
      <span class="token key atrule">searchers</span><span class="token punctuation">:</span>
        <span class="token punctuation">-</span> <span class="token punctuation">{</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> <span class="token string">&#39;id&#39;</span><span class="token punctuation">,</span> <span class="token key atrule">predicate</span><span class="token punctuation">:</span> <span class="token string">&#39;eq&#39;</span> <span class="token punctuation">}</span>
        <span class="token punctuation">-</span> <span class="token punctuation">{</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> <span class="token string">&#39;name&#39;</span><span class="token punctuation">,</span> <span class="token key atrule">predicate</span><span class="token punctuation">:</span> <span class="token string">&#39;cont&#39;</span> <span class="token punctuation">}</span>
      <span class="token key atrule">pagination</span><span class="token punctuation">:</span>
        <span class="token key atrule">per</span><span class="token punctuation">:</span> <span class="token number">5</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="fields" tabindex="-1"><a class="header-anchor" href="#fields" aria-hidden="true">#</a> Fields</h2><h3 id="items" tabindex="-1"><a class="header-anchor" href="#items" aria-hidden="true">#</a> items</h3><table><thead><tr><th>Field</th><th>Description</th><th>Type</th><th>Default value</th><th>Sample value</th></tr></thead><tbody><tr><td>name</td><td>model attribute name</td><td>string</td><td>-</td><td>&quot;id&quot;</td></tr><tr><td>type</td><td>model attribute value type</td><td>string</td><td>-</td><td>&quot;string&quot;</td></tr><tr><td>optionals</td><td>model attribute value&#39;s enum</td><td>Array&lt;string | number | boolean&gt;</td><td>-</td><td>[&quot;apple&quot;, &quot;google&quot;, &quot;microsoft&quot;]</td></tr><tr><td>attributes</td><td>embed object attributes, available when <code>type == &quot;object&quot;</code></td><td>-</td><td>-</td><td>-</td></tr><tr><td>attributes.name</td><td>object attribute name</td><td>string</td><td>-</td><td>-</td></tr><tr><td>attributes.type</td><td>object attribute value type</td><td>string</td><td>-</td><td>-</td></tr><tr><td>attributes.optionals</td><td>object attribute value&#39;s enum</td><td>Array&lt;string | number | boolean&gt;</td><td>-</td><td>-</td></tr><tr><td>hidden</td><td>hide in column</td><td>boolean</td><td>false</td><td>false</td></tr></tbody></table>`,6),u=n("strong",null,"type",-1),k=n("strong",null,"attributes.type",-1),b=n("code",null,"object",-1),h=p(`<h3 id="sorters" tabindex="-1"><a class="header-anchor" href="#sorters" aria-hidden="true">#</a> sorters</h3><table><thead><tr><th>Field</th><th>Description</th><th>Type</th><th>Default value</th><th>Sample value</th></tr></thead><tbody><tr><td>name</td><td>sorter name</td><td>string</td><td>-</td><td>&quot;id&quot;</td></tr><tr><td>directions</td><td>supported sort direction</td><td>Array&lt;string&gt;</td><td>-</td><td>[&quot;descend&quot;, &quot;ascend&quot;]</td></tr></tbody></table><h3 id="searchers" tabindex="-1"><a class="header-anchor" href="#searchers" aria-hidden="true">#</a> searchers</h3><table><thead><tr><th>Field</th><th>Description</th><th>Type</th><th>Default value</th><th>Sample value</th></tr></thead><tbody><tr><td>name</td><td>searcher name</td><td>string</td><td>-</td><td>&quot;id&quot;</td></tr><tr><td>type</td><td>searcher value type</td><td>string</td><td>-</td><td>&quot;string&quot;</td></tr><tr><td>optionals</td><td>searcher value&#39;s enum</td><td>Array&lt;string | number | boolean&gt;</td><td>-</td><td>[&quot;apple&quot;, &quot;google&quot;, &quot;microsoft&quot;]</td></tr><tr><td>predicate</td><td>searcher predicates</td><td>string</td><td>-</td><td>&quot;eq&quot;</td></tr></tbody></table><ul><li><strong>predicate</strong> - must be one of <code>eq</code>, <code>cont</code></li></ul><h3 id="pagination" tabindex="-1"><a class="header-anchor" href="#pagination" aria-hidden="true">#</a> pagination</h3><table><thead><tr><th>Field</th><th>Description</th><th>Type</th><th>Default value</th><th>Sample value</th></tr></thead><tbody><tr><td>per</td><td>number of items displayed per page</td><td>number</td><td>-</td><td>20</td></tr></tbody></table><h2 id="request-interface" tabindex="-1"><a class="header-anchor" href="#request-interface" aria-hidden="true">#</a> Request Interface</h2><h3 id="get" tabindex="-1"><a class="header-anchor" href="#get" aria-hidden="true">#</a> GET</h3><ul><li><strong>GET /users/index/self</strong></li><li><strong>request</strong></li></ul><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">interface</span> <span class="token class-name">ListRequest</span> <span class="token punctuation">{</span>
  search<span class="token operator">?</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    id_eq<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">number</span>
    name_cont<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span>
  <span class="token punctuation">}</span>
  sorter<span class="token operator">?</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    name<span class="token operator">:</span> <span class="token builtin">string</span>
    direction<span class="token operator">:</span> <span class="token string">&#39;ascend&#39;</span> <span class="token operator">|</span> <span class="token string">&#39;descend&#39;</span>
  <span class="token punctuation">}</span>
  pagination<span class="token operator">:</span> <span class="token punctuation">{</span>
    page_size<span class="token operator">:</span> <span class="token builtin">number</span>
    current<span class="token operator">:</span> <span class="token builtin">number</span>
    total<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">number</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><strong>response data</strong></li></ul><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">interface</span> <span class="token class-name">ListResponse</span> <span class="token punctuation">{</span>
  collection<span class="token operator">:</span> <span class="token punctuation">{</span>
    id<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">number</span>
    name<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span>
    avatar<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span>
  <span class="token punctuation">}</span><span class="token punctuation">[</span><span class="token punctuation">]</span>
  pagination<span class="token operator">?</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    page_size<span class="token operator">:</span> <span class="token builtin">number</span>
    current<span class="token operator">:</span> <span class="token builtin">number</span>
    total<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">number</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,13);function m(v,g){const s=i("RouterLink");return l(),d("div",null,[c,n("ul",null,[n("li",null,[u,t(" - must be one of "),a(s,{to:"/guide/specification/type.html"},{default:e(()=>[t("Value Type")]),_:1})]),n("li",null,[k,t(" - must be one of "),a(s,{to:"/guide/specification/type.html"},{default:e(()=>[t("Value Type")]),_:1}),t(", except "),b])]),h])}const f=o(r,[["render",m],["__file","block-table.html.vue"]]);export{f as default};
